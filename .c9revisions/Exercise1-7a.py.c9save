{"ts":1381153187393,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"#! /usr/bin/python\n#\n# This is support material for the course \"Learning from Data\" on edX.org\n# https://www.edx.org/course/caltechx/cs1156x/learning-data/1120\n#\n# The software is intented for course usage, no guarantee whatsoever\n# Date: Sep 30, 2013\n#\n# Template for a LIONsolver parametric table script.\n#\n# Generates a table based on input parameters taken from another table or from user input\n#\n# Syntax:\n# When called without command line arguments:\n#    number_of_inputs\n#    name_of_input_1 default_value_of_input_1\n#    ...\n#    name_of_input_n default_value_of_input_n\n# Otherwise, the program is invoked with the following syntax:\n#    script_name.py input_1 ... input_n table_row_number output_file.csv\n# where table_row_number is the row from which the input values are taken (assume it to be 0 if not needed)\n#\n# To customize, modify the output message with no arguments given and insert task-specific code\n# to insert lines (using tmp_csv.writerow) in the output table.\n\nimport sys\nimport os\nimport random\n\n#\n# If there are not enough parameters, optionally write out the number of required parameters\n# followed by the list of their names and default values. One parameter per line,\n# name followed by tab followed by default value.\n# LIONsolver will use this list to provide a user friendly interface for the component's evaluation.\n#\nif len(sys.argv) < 2:\n\tsys.stdout.write (\"2\\nNumber of tests\\t1000\\nNumber of training points\\t10\\n\")\n\tsys.exit(0)\n\n#\n# Retrieve the input parameters, the input row number, and the output filename.\n#\nin_parameters = [float(x) for x in sys.argv[1:-2]]\nin_rownumber = int(sys.argv[-2])\nout_filename = sys.argv[-1]\n\n#\n# Retrieve the output filename from the command line; create a temporary filename\n# and open it, passing it through the CSV writer\n#\ntmp_filename = out_filename + \"_\"\ntmp_file = open(tmp_filename, \"w\")\n\n#############################################################################\n#\n# Task-specific code goes here.\n#\n\n# The following function is a stub for the perceptron training function required in Exercise1-7 and following.\n# It currently generates random results.\n# You should replace it with your implementation of the\n# perceptron algorithm (we cannot do it otherwise we solve the homework for you :)\n# This functon takes the coordinates of the two points and the number of training samples to be considered.\n# It returns the number of iterations needed to converge and the disagreement with the original function.\ndef perceptron_training (x1, y1, x2, y2, training_size):\n\n\t#return (int (random.gauss(100, 10)), random.random() / training_size)\n\treturn (int (random.gauss(100, 10)), training_size)\n\ntests = int(in_parameters[0])\npoints = int(in_parameters[1])\n\n# Write the header line in the output file, in this case the output is a 3-columns table containing the results\n# of the experiments\n# The syntax  name::type  is used to identify the columns and specify the type of data\nheader = \"Test number::label,Number of iterations::number,Disagreement::number\\n\"\ntmp_file.write (header)\n\n\n# Repeat the experiment n times (tests parameter) and store the result of each experiment in one line of the output table\nfor t in range(1,tests+1):\n\tx1 = random.uniform (-1, 1)\n\ty1 = random.uniform (-1, 1)\n\tx2 = random.uniform (-1, 1)\n\ty2 = random.uniform (-1, 1)\n\titerations, disagreement = perceptron_training (x1, y1, x2, y2, points)\n\tline = str(t) + ',' + str(iterations) + ',' + str(disagreement) + '\\n'\n\ttmp_file.write (line)\n\n#\n#############################################################################\n\n#\n# Close all input files and the temporary output file.\n#\ntmp_file.close()\n\n#\n# Rename the temporary output file into the final one.\n# It's important that the output file only appears when it is complete,\n# otherwise LIONsolver might read an incomplete table.\n#\nos.rename (tmp_filename, out_filename)\n"]],"start1":0,"start2":0,"length1":0,"length2":3882}]],"length":3882}
{"contributors":[],"silentsave":false,"ts":1381154233297,"patch":[[{"diffs":[[0,"_size):\n"],[1,"    m = (y2-y1)/(x2-x1)\n    "],[0,"\n\t#retur"]],"start1":2540,"start2":2540,"length1":16,"length2":44},{"diffs":[[0,", 10)), "],[-1,"training_size"],[1,"m"],[0,")\n\ntests"]],"start1":2679,"start2":2679,"length1":29,"length2":17}]],"length":3898,"saved":false}
{"ts":1381154288285,"patch":[[{"diffs":[[0,"x1)\n"],[-1,"    \n"],[0,"\t#re"]],"start1":2568,"start2":2568,"length1":13,"length2":8}]],"length":3893,"saved":false}
{"ts":1381154296502,"patch":[[{"diffs":[[0,"g_size)\n"],[-1,"\t"],[1,"    "],[0,"return ("]],"start1":2636,"start2":2636,"length1":17,"length2":20}]],"length":3896,"saved":false}
{"ts":1381154590695,"patch":[[{"diffs":[[0,"exit(0)\n"],[1,"print sys.argv"],[0,"\n#\n# Ret"]],"start1":1460,"start2":1460,"length1":16,"length2":30}]],"length":3910,"saved":false}
{"ts":1381154703467,"patch":[[{"diffs":[[0,"(0)\n"],[-1,"print sys.argv\n"],[0,"#\n# "]],"start1":1464,"start2":1464,"length1":23,"length2":8}]],"length":3895,"saved":false}
{"ts":1381154712572,"patch":[[{"diffs":[[0,", 10)), "],[-1,"m"],[1,"training_size"],[0,")\n\ntests"]],"start1":2676,"start2":2676,"length1":17,"length2":29}]],"length":3907,"saved":false}
{"ts":1381155095486,"patch":[[{"diffs":[[0,"nction.\n"],[1,"def Yatx (x, m, b=0):\n    return (m*x + b)\n"],[0,"def perc"]],"start1":2482,"start2":2482,"length1":16,"length2":59}]],"length":3950,"saved":false}
{"ts":1381155105764,"patch":[[{"diffs":[[0,"\ndef Yat"],[-1,"x"],[1,"X"],[0," (x, m, "]],"start1":2489,"start2":2489,"length1":17,"length2":17}]],"length":3950,"saved":false}
{"ts":1381155623619,"patch":[[{"diffs":[[0,"(x2-x1)\n"],[1,"    datapoints = ()\n    for num in range (1, training_size+1):\n        datapoints.append (random.uniform (-1, 1), random.uniform (-1, 1))\n    print datapoints\n"],[0,"\t#return"]],"start1":2606,"start2":2606,"length1":16,"length2":175}]],"length":4109,"saved":false}
{"ts":1381155684547,"patch":[[{"diffs":[[0,"oints = "],[-1,"()"],[1,"[]"],[0,"\n    for"]],"start1":2623,"start2":2623,"length1":18,"length2":18}]],"length":4109,"saved":false}
{"ts":1381155799713,"patch":[[{"diffs":[[0,".append "],[1,"("],[0,"(random."]],"start1":2695,"start2":2695,"length1":16,"length2":17},{"diffs":[[0,"(-1, 1))"],[1,")"],[0,"\n    pri"]],"start1":2744,"start2":2744,"length1":16,"length2":17}]],"length":4111,"saved":false}
{"ts":1381155813895,"patch":[[{"diffs":[[0,"    "],[-1,"print datapoints"],[0,"\n\t#r"]],"start1":2754,"start2":2754,"length1":24,"length2":8}]],"length":4095,"saved":false}
{"contributors":[],"silentsave":false,"ts":1381157109851,"patch":[[{"diffs":[[0,"ts = []\n"],[1,"    w = (0,0,0)\n    \n"],[0,"    for "]],"start1":2626,"start2":2626,"length1":16,"length2":37}]],"length":4116,"saved":false}
{"ts":1381159046421,"patch":[[{"diffs":[[0,"*x + b)\n"],[1,"def plaformula (w, x, y):\n    val = w[0]*1 + w[1]*x + w[2]*y\n    if val > 0\n        return 1\n    elif val <0\n        return -1\n    else\n        return 0\n"],[0,"def perc"]],"start1":2525,"start2":2525,"length1":16,"length2":169}]],"length":4269,"saved":false}
{"ts":1381159062328,"patch":[[{"diffs":[[0," pla"],[-1,"formula"],[1,"G"],[0," (w,"]],"start1":2536,"start2":2536,"length1":15,"length2":9},{"diffs":[[0," val > 0"],[1,":"],[0,"\n       "]],"start1":2594,"start2":2594,"length1":16,"length2":17},{"diffs":[[0,"if val <"],[-1,"0"],[1," 0:"],[0,"\n       "]],"start1":2627,"start2":2627,"length1":17,"length2":19},{"diffs":[[0," -1\n"],[-1,""],[0,"    else"],[1,":"],[0,"\n   "]],"start1":2653,"start2":2653,"length1":16,"length2":17}]],"length":4267,"saved":false}
{"ts":1381159078399,"patch":[[{"diffs":[[0,"w = "],[-1,"(0"],[1,"[1"],[0,",0,0"],[-1,")"],[1,"]"],[0,"\n   "]],"start1":2789,"start2":2789,"length1":15,"length2":15}]],"length":4267,"saved":false}
{"ts":1381159400012,"patch":[[{"diffs":[[0,"(x2-x1)\n"],[1,"    #y=mx +b; b = y-mx\n    b = y1 - m * x1\n    \n"],[0,"    data"]],"start1":2757,"start2":2757,"length1":16,"length2":64},{"diffs":[[0,"[1,0,0]\n"],[-1,"    \n"],[0,"    for "]],"start1":2841,"start2":2841,"length1":21,"length2":16},{"diffs":[[0,"))\n    \n"],[1,"    allgood = 0\n    while allgood != 1:\n        allgood = 1\n        for datapoint in datapoints:\n            \n"],[0,"\t#return"]],"start1":2966,"start2":2966,"length1":16,"length2":126}]],"length":4420,"saved":false}
{"ts":1381159481786,"patch":[[{"diffs":[[0,"return 0"],[1,"\n\n    "],[0,"\ndef per"]],"start1":2675,"start2":2675,"length1":16,"length2":22}]],"length":4426,"saved":false}
{"ts":1381160855746,"patch":[[{"diffs":[[0,"*x + b)\n"],[1,"def signF (xtotest, m, b):\n    val = m*xtotest + b\n    if val > 0:\n        return 1\n    elif val < 0:\n        return -1\n    else:\n        return 0\n"],[0,"def plaG"]],"start1":2525,"start2":2525,"length1":16,"length2":163}]],"length":4573,"saved":false}
{"ts":1381160998339,"patch":[[{"diffs":[[0,"ood = 0\n"],[1,"    numberIterations = 0\n"],[0,"    whil"]],"start1":3135,"start2":3135,"length1":16,"length2":41},{"diffs":[[0,"d != 1:\n"],[1,"        numberIterations+=1\n"],[0,"        "]],"start1":3184,"start2":3184,"length1":16,"length2":44},{"diffs":[[0,"points:\n"],[1,"            if (signF( datapoint[0], m, b) != plaG(w, datapoint[0], datapoint[1])):\n                allgood = 0\n                \n"],[0,"        "]],"start1":3269,"start2":3269,"length1":16,"length2":145},{"diffs":[[0,"rn ("],[-1,"int (random.gauss(100, 10))"],[1,"numberIterations"],[0,", tr"]],"start1":3499,"start2":3499,"length1":35,"length2":24}]],"length":4744,"saved":false}
{"ts":1381161037444,"patch":[[{"diffs":[[0,"    "],[-1,"if ("],[1,"yn = "],[0,"sign"]],"start1":3285,"start2":3285,"length1":12,"length2":13},{"diffs":[[0,", m, b) "],[1,"\n            if (yn "],[0,"!= plaG("]],"start1":3313,"start2":3313,"length1":16,"length2":36},{"diffs":[[0,"            "],[1,"w[0] =    "],[0,"\n           "]],"start1":3414,"start2":3414,"length1":24,"length2":34}]],"length":4775,"saved":false}
{"ts":1381161111459,"patch":[[{"diffs":[[0,"[0] "],[-1,"=    "],[1,"+= yn *1\n                w[1] += yn * datapoint[0]\n                w[2] += yn * datapoint[1]"],[0,"\n   "]],"start1":3427,"start2":3427,"length1":13,"length2":100}]],"length":4862,"saved":false}
{"ts":1381161180406,"patch":[[{"diffs":[[0,"    "],[-1,"if ("],[1,"g"],[0,"yn "],[-1,"!"],[0,"= pl"]],"start1":3330,"start2":3330,"length1":16,"length2":12},{"diffs":[[0,"oint[1])"],[1,"\n            print (\"iteration %s: yn = %s , Gyn = %s\") % (numberIterations, yn, gyn)\n            if (yn != gyn"],[0,"):\n     "]],"start1":3367,"start2":3367,"length1":16,"length2":127}]],"length":4969,"saved":false}
{"ts":1381161208096,"patch":[[{"diffs":[[0,"n, gyn)\n"],[1,"            print w\n"],[0,"        "]],"start1":3453,"start2":3453,"length1":16,"length2":36}]],"length":4989,"saved":false}
{"ts":1381161238037,"patch":[[{"diffs":[[0,"ood = 1\n"],[1,"        print w\n"],[0,"        "]],"start1":3232,"start2":3232,"length1":16,"length2":32},{"diffs":[[0,"            "],[1,"#"],[0,"print (\"iter"]],"start1":3392,"start2":3392,"length1":24,"length2":25},{"diffs":[[0,"yn)\n            "],[-1,"print w"],[0,"\n            if "]],"start1":3474,"start2":3474,"length1":39,"length2":32}]],"length":4999,"saved":false}
{"ts":1381161335880,"patch":[[{"diffs":[[0,"   w = ["],[-1,"1"],[1,"0"],[0,",0,0]\n  "]],"start1":2987,"start2":2987,"length1":17,"length2":17}]],"length":4999,"saved":false}
{"ts":1381161395979,"patch":[[{"diffs":[[0,"oint[1]\n    "],[-1,"    "],[1,"#lets find disagreement\n    numverify = 10000\n"],[0,"    \n\t#retur"]],"start1":3653,"start2":3653,"length1":28,"length2":70}]],"length":5041,"saved":false}
{"ts":1381161418825,"patch":[[{"diffs":[[0,"000\n    "],[1,"verifypoints = []\n    for num in range (1, numverify+1):\n        verifypoints.append ((random.uniform (-1, 1), random.uniform (-1, 1)))"],[0,"\n\t#retur"]],"start1":3707,"start2":3707,"length1":16,"length2":151}]],"length":5176,"saved":false}
{"ts":1381161532150,"patch":[[{"diffs":[[0,"points = []\n"],[1,"    numwrong = 0\n"],[0,"    for num "]],"start1":3721,"start2":3721,"length1":24,"length2":41},{"diffs":[[0,"1, 1)))\n"],[1,"        datapoint = verifypoints[num]\n        yn = signF( datapoint[0], m, b) \n        gyn = plaG(w, datapoint[0], datapoint[1])\n        if (yn != gyn):\n            numwrong += 1\n    prob = numwrong / numverify\n    \n    \n"],[0,"\t#return"]],"start1":3860,"start2":3860,"length1":16,"length2":237}]],"length":5414,"saved":false}
{"ts":1381161535185,"patch":[[{"diffs":[[0,"mverify\n    "],[1,"print prob"],[0,"\n    \n\t#retu"]],"start1":4071,"start2":4071,"length1":24,"length2":34}]],"length":5424,"saved":false}
{"ts":1381161538327,"patch":[[{"diffs":[[0,"y = 1000"],[-1,"0"],[0,"\n    ver"]],"start1":3701,"start2":3701,"length1":17,"length2":16}]],"length":5423,"saved":false}
{"ts":1381161550061,"patch":[[{"diffs":[[0,"ints[num"],[1,"-1"],[0,"]\n      "]],"start1":3895,"start2":3895,"length1":16,"length2":18}]],"length":5425,"saved":false}
{"ts":1381161579077,"patch":[[{"diffs":[[0,"y = 1000"],[1,"0"],[0,"\n    ver"]],"start1":3701,"start2":3701,"length1":16,"length2":17}]],"length":5426,"saved":false}
{"ts":1381161594103,"patch":[[{"diffs":[[0,", datapoint[1])\n"],[1,"        print yn, gyn\n"],[0,"        if (yn !"]],"start1":3983,"start2":3983,"length1":32,"length2":54}]],"length":5448,"saved":false}
{"ts":1381161626683,"patch":[[{"diffs":[[0,"  print "],[-1,"yn, gyn"],[1,"num"],[0,"\n       "]],"start1":4005,"start2":4005,"length1":23,"length2":19}]],"length":5444,"saved":false}
{"ts":1381161646299,"patch":[[{"diffs":[[0,"  print "],[-1,"num"],[1,"datapoint"],[0,"\n       "]],"start1":4005,"start2":4005,"length1":19,"length2":25}]],"length":5450,"saved":false}
{"ts":1381161663763,"patch":[[{"diffs":[[0,"    "],[-1,"print datapoint"],[0,"\n   "]],"start1":4003,"start2":4003,"length1":23,"length2":8}]],"length":5435,"saved":false}
{"ts":1381161665919,"patch":[[{"diffs":[[0,"  print "],[-1,"prob"],[1,"numwrong"],[0,"\n    \n\t#"]],"start1":4092,"start2":4092,"length1":20,"length2":24}]],"length":5439,"saved":false}
{"ts":1381161677067,"patch":[[{"diffs":[[0,"numwrong"],[1,", prob"],[0,"\n    \n\t#"]],"start1":4100,"start2":4100,"length1":16,"length2":22}]],"length":5445,"saved":false}
{"ts":1381161745136,"patch":[[{"diffs":[[0," prob = "],[1,"float("],[0,"numwrong"],[1,")"],[0," / numve"]],"start1":4061,"start2":4061,"length1":24,"length2":31}]],"length":5452,"saved":false}
{"ts":1381161783605,"patch":[[{"diffs":[[0,"ations, "],[-1,"training_size"],[1,"prob"],[0,")\n\ntests"]],"start1":4221,"start2":4221,"length1":29,"length2":20}]],"length":5443,"saved":false}
{"ts":1381162094881,"patch":[[{"diffs":[[0,"   print"],[1," (\"iters: %s numwrong: %s prob: %s\") % (numberIterations,"],[0," numwron"]],"start1":4098,"start2":4098,"length1":16,"length2":73},{"diffs":[[0,"ng, prob"],[1,")"],[0,"\n    \n\t#"]],"start1":4170,"start2":4170,"length1":16,"length2":17}]],"length":5501,"saved":false}
{"ts":1381162130477,"patch":[[{"diffs":[[0,"    "],[-1,"numberIterations+=1"],[0,"\n   "]],"start1":3196,"start2":3196,"length1":27,"length2":8},{"diffs":[[0,"if (yn != gyn):\n"],[1,"                numberIterations+=1\n"],[0,"                "]],"start1":3484,"start2":3484,"length1":32,"length2":68}]],"length":5518,"saved":false}
{"ts":1381162331705,"patch":[[{"diffs":[[0,"t table\n"],[1,"totaliterations= 0\ntotaldisagreement = 0\n"],[0,"for t in"]],"start1":4815,"start2":4815,"length1":16,"length2":57},{"diffs":[[0,"'\n\tt"],[-1,"mp_file.write (line)\n"],[1,"otaliterations += iterations\n\ttotaldisagreement += disagreement\n\ttmp_file.write (line)\nprint \"Average iterations: %s   Average Disagreement %s\" % ((totaliterations/tests), (totaldisagreement/tests))"],[0,"\n#\n#"]],"start1":5150,"start2":5150,"length1":29,"length2":206}]],"length":5736,"saved":false}
{"ts":1381162408988,"patch":[[{"diffs":[[0,"= 1\n"],[-1,"        print w\n"],[0,"    "]],"start1":3217,"start2":3217,"length1":24,"length2":8}]],"length":5720,"saved":false}
{"ts":1381162453189,"patch":[[{"diffs":[[0,"oint[1]\n"],[1,"                continue\n"],[0,"    #let"]],"start1":3654,"start2":3654,"length1":16,"length2":41}]],"length":5745,"saved":false}
{"ts":1381162567538,"patch":[[{"diffs":[[0,"    "],[-1,"continue"],[1,"break"],[0,"\n   "]],"start1":3674,"start2":3674,"length1":16,"length2":13}]],"length":5742,"saved":false}
